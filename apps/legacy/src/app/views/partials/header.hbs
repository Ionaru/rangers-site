<title>7R{{#if title}} - {{title}}{{else}}{{/if}}</title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<base href="/">

<link rel="stylesheet" href="/stylesheets/chartist.min.css">
<link rel="stylesheet" href="https://unpkg.com/bootstrap-select@1.13.9/dist/css/bootstrap-select.min.css" crossorigin="anonymous">
<link rel="stylesheet" href="https://unpkg.com/gijgo@1.9.13/css/gijgo.min.css" crossorigin="anonymous">
<link rel="stylesheet" href="/stylesheets/main.css">

<script src="/js/chartist.min.js"></script>
<script src="/js/chartist-plugin-legend.js"></script>
<script async src="/js/solid.min.js"></script>
<script async src="/js/brands.min.js"></script>
<script async src="/js/fontawesome.min.js"></script>

<script>
    const storedTheme = localStorage.getItem('theme');

    const getPreferredTheme = () => {
        if (storedTheme) {
            return storedTheme;
        }

        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    }

    const setTheme = function (theme) {
        if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {
            document.documentElement.setAttribute('data-bs-theme', 'dark');
        } else {
            document.documentElement.setAttribute('data-bs-theme', theme);
        }
    };

    setTheme(getPreferredTheme())

    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
        if (storedTheme !== 'light' && storedTheme !== 'dark') {
            setTheme(getPreferredTheme());
        }
    });

    window.addEventListener('DOMContentLoaded', () => {
        const toggles = document.querySelectorAll('[data-bs-theme-value]');

        toggles.forEach(toggle => {
            toggle.style.cursor = 'pointer';
            const theme = toggle.getAttribute('data-bs-theme-value');
            if (theme === getPreferredTheme()) {
                toggle.classList.add('active');
            }

            toggle.addEventListener('click', () => {
                toggles.forEach(toggle => toggle.classList.remove('active'));
                toggle.classList.add('active');
                localStorage.setItem('theme', theme);
                setTheme(theme);
            });
        });
    });
</script>
